{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/common/shared/components/styled.ts","webpack:///./src/common/styledComponents.ts","webpack:///external \"react-router-dom\"","webpack:///external \"redux-saga/effects\"","webpack:///./src/server/models/User/index.ts","webpack:///external \"polished\"","webpack:///./src/common/Root/screens/SingleUser/types.ts","webpack:///external \"yup\"","webpack:///external \"react-redux\"","webpack:///./src/common/Root/screens/UserList/types.ts","webpack:///external \"config\"","webpack:///./src/common/Root/screens/EditProfile/types.ts","webpack:///external \"axios\"","webpack:///external \"formik\"","webpack:///external \"express\"","webpack:///./src/common/actionCreators.ts","webpack:///external \"mongoose\"","webpack:///./src/common/types.ts","webpack:///external \"passport\"","webpack:///./src/common/Root/screens/EditProfile/actionCreators.ts","webpack:///external \"redux\"","webpack:///./src/common/Root/screens/SingleUser/actionCreators.ts","webpack:///external \"styled-components\"","webpack:///external \"crypto\"","webpack:///external \"redux-saga\"","webpack:///external \"react-dom/server\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/common/Root/screens/Registration/validationSchema.ts","webpack:///./src/common/Root/screens/Registration/index.tsx","webpack:///./src/common/Root/screens/Login/components.ts","webpack:///./src/common/Root/screens/Login/validationSchema.ts","webpack:///./src/common/Root/screens/Login/index.tsx","webpack:///./src/common/Root/screens/SingleUser/components/styled.ts","webpack:///./src/common/Root/screens/SingleUser/components/ArrowBack/index.tsx","webpack:///./src/common/Root/screens/SingleUser/index.tsx","webpack:///./src/common/Root/screens/EditProfile/components/styled.ts","webpack:///./src/common/Root/screens/EditProfile/validationSchema.ts","webpack:///./src/common/Root/screens/EditProfile/index.tsx","webpack:///./src/common/Root/screens/UserList/actionCreators.ts","webpack:///./src/common/Root/screens/UserList/components/styled/index.ts","webpack:///./src/common/Root/screens/UserList/components/IsLoggedInUser/index.tsx","webpack:///./src/common/Root/screens/UserList/index.tsx","webpack:///./src/common/Root/components/Header/index.tsx","webpack:///./src/common/theme.ts","webpack:///./src/common/Root/screens/Logout/index.tsx","webpack:///external \"react-hot-loader\"","webpack:///./src/common/Root/index.tsx","webpack:///external \"react-router\"","webpack:///external \"lodash/pick\"","webpack:///external \"passport-jwt\"","webpack:///external \"serve-favicon\"","webpack:///external \"cookie-parser\"","webpack:///external \"path\"","webpack:///./src/server/libConfig/mongoose.ts","webpack:///./src/server/routes/users/index.ts","webpack:///./src/common/rootReducer.ts","webpack:///./src/common/Root/screens/UserList/reducers.ts","webpack:///./src/common/Root/screens/SingleUser/reducers.ts","webpack:///./src/common/Root/screens/EditProfile/reducers.ts","webpack:///./src/common/configureStore.ts","webpack:///./src/common/globalStyles.ts","webpack:///./src/common/Root/screens/UserList/apiService.ts","webpack:///./src/common/Root/screens/UserList/sagas.ts","webpack:///./src/common/Root/screens/SingleUser/apiService.ts","webpack:///./src/common/Root/screens/SingleUser/sagas.ts","webpack:///./src/common/Root/screens/EditProfile/apiService.ts","webpack:///./src/common/Root/screens/EditProfile/sagas.ts","webpack:///./src/common/rootSaga.ts","webpack:///./src/server/routes/ssr/index.tsx","webpack:///./src/server/server.ts","webpack:///./src/server/libConfig/passport.ts","webpack:///./src/server/libConfig/index.ts","webpack:///./src/server/index.ts","webpack:///(webpack)/buildin/harmony-module.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","Title","styledComponents__WEBPACK_IMPORTED_MODULE_0__","h1","theme","scale","second","base","ServerErrorMessage","colors","secondary","BaseButton","button","primary","SubmitButton","extend","ErrorMessage","Label","label","StyledField","formik__WEBPACK_IMPORTED_MODULE_1__","quaternary","BottomLink","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","first","tertiary","InputBlock","div","BlockWrapper","StyledForm","default","styled","css","injectGlobal","keyframes","ThemeProvider","withTheme","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","userSchema","mongoose__WEBPACK_IMPORTED_MODULE_0___default","a","Schema","username","type","String","required","minlength","maxlength","trim","lowercase","unique","email","firstName","lastName","password","salt","set","statics","publicFields","updateFields","filterPublicFields","userOrUsers","Array","isArray","map","rawUser","this","reduce","acc","field","filterUpdateFields","user","length","iterations","algorithm","config__WEBPACK_IMPORTED_MODULE_2___default","pre","next","crypto__WEBPACK_IMPORTED_MODULE_1___default","randomBytes","err","randB","toString","pbkdf2","derivedKey","methods","checkPassword","Promise","resolve","reject","Error","model","fetchSingleUserTypes","removeUserTypes","UsersFetchActionTypes","userFetchTypes","userUpdateTypes","addLoggedInUser","_types__WEBPACK_IMPORTED_MODULE_0__","ADD_LOGGED_IN_USER","removeLoggedInUser","REMOVE_LOGGED_IN_USER","loggedInUserTypes","userFetchRequested","id","USER_FETCH_REQUESTED","userFetchSucceeded","USER_FETCH_SUCCEEDED","userFetchFailed","error","USER_FETCH_FAILED","userUpdateSucceeded","USER_UPDATE_SUCCEEDED","fetchSingleUserRequested","FETCH_SINGLE_USER_REQUESTED","fetchSingleUserSucceeded","FETCH_SINGLE_USER_SUCCEEDED","fetchSingleUserFailed","FETCH_SINGLE_USER_FAILED","removeUser","REMOVE_USER","validationSchema","external_yup_","shape","min","max","initialValues","serverErrorMessage","external_react_redux_","state","loggedInUser","actionCreators","props","external_react_default","createElement","external_formik_","onSubmit","values","formikBag","setSubmitting","external_axios_default","post","then","res","data","history","replace","catch","setErrors","response","bind","render","touched","errors","isSubmitting","external_react_router_dom_","to","Fragment","htmlFor","disabled","styledComponents","DefaultUserMessage","Card","article","external_polished_","FullName","h2","Username","h3","Email","RegisteredSince","Buttons","section","third","fifth","EditButton","DeleteButton","withComponent","BackButton","fourth","components_ArrowBack","width","height","xmlns","fill","fillRule","_objectSpread","common_actionCreators","external_react_","constructor","super","_defineProperty","match","params","push","users","idUrlParam","test","createdAt","find","_id","loggedInUserId","Date","toDateString","onClick","CancelButton","EditProfile_actions","actions","goBack","usersFetchRequested","types","USERS_FETCH_REQUESTED","usersFetchSucceeded","USERS_FETCH_SUCCEEDED","usersFetchFailed","USERS_FETCH_FAILED","mFirst","bold","ThisIsYou","components_IsLoggedInUser","userId","actionCreators_namespaceObject","key","H","styledComponents__WEBPACK_IMPORTED_MODULE_2__","header","polished__WEBPACK_IMPORTED_MODULE_3__","UserInfo","Nav","nav","StyledLink","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","includes","location","pathname","react__WEBPACK_IMPORTED_MODULE_0___default","sixth","polished__WEBPACK_IMPORTED_MODULE_0__","mSecond","react_redux__WEBPACK_IMPORTED_MODULE_3__","dispatch","redux__WEBPACK_IMPORTED_MODULE_4__","_actionCreators__WEBPACK_IMPORTED_MODULE_5__","react__WEBPACK_IMPORTED_MODULE_0__","[object Object]","args","_temp","loggedOut","componentDidMount","axios__WEBPACK_IMPORTED_MODULE_2___default","setState","console","Main","styledComponents__WEBPACK_IMPORTED_MODULE_3__","polished__WEBPACK_IMPORTED_MODULE_5__","MainInner","react_hot_loader__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_4__","_theme__WEBPACK_IMPORTED_MODULE_12__","_components_Header__WEBPACK_IMPORTED_MODULE_13__","exact","path","component","_screens_Registration__WEBPACK_IMPORTED_MODULE_9__","_screens_Login__WEBPACK_IMPORTED_MODULE_8__","_screens_Logout__WEBPACK_IMPORTED_MODULE_10__","_screens_UserList__WEBPACK_IMPORTED_MODULE_6__","_screens_SingleUser__WEBPACK_IMPORTED_MODULE_7__","_screens_EditProfile__WEBPACK_IMPORTED_MODULE_11__","external_mongoose_default","connect","external_config_default","connection","on","router","external_express_","jwtAuth","external_passport_default","authenticate","session","cookieOptions","httpOnly","expires","now","Number","parseInt","signed","jwtOptions","expiresIn","validateUserIdParam","req","Types","ObjectId","isValid","statusCode","User","lean","rawUsers","filteredUsers","json","findById","body","userDoc","save","updatedUserDoc","send","findByIdAndUpdate","new","payload","external_jsonwebtoken_default","sign","token","cookie","findOne","isCorrect","toObject","clearCookie","status","delete","findByIdAndRemove","routes_users","rootReducer","action","common_types","rootReducer_objectSpread","requestInProgress","userList","SingleUser_types","reducers_objectSpread","idx","findIndex","slice","singleUserReducer","EditProfile_types","EditProfile_reducers_objectSpread","editPropfileReducer","defaultState","fetchUsers","sagas_fetchUsers","effects_","userListSaga","fetchSingleUser","fetchSingleUserWorker","removeUserWorker","e","watchFetchSingleUser","apiService","fetchUserWorker","EditProfile_actionCreators","fetchUserWatcher","rootSaga","assets","JSON","parse","filter","asset","ssr","info","context","sheet","external_styled_components_","localDefaultState","ssr_objectSpread","store","preloadedState","enhancers","sagaMiddleware","external_redux_saga_default","external_redux_","runSaga","run","close","external_redux_saga_","configureStore","rootComp","external_react_router_","originalUrl","Root","url","redirect","done","html","getStyleTags","stringify","getState","server_","reverse","assetPath","join","server_app","external_express_default","disable","use","static","external_serve_favicon_default","external_path_default","external_cookie_parser_default","urlencoded","extended","app","initialize","options","jwtFromRequest","signedCookies","secretOrKey","external_passport_jwt_","pick_default","passport","message","listen","originalModule","webpackPolyfill","create","children"],"mappings":"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","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","module.exports = require(\"react\");","import styled from \"styledComponents\";\nimport { Field, Form, FieldAttributes } from \"formik\";\nimport { Link } from \"react-router-dom\";\n\nexport const Title = styled.h1`\n  font-size: ${({ theme }) => theme.scale.second};\n  font-weight: 100;\n  color: rgba(0, 0, 0, 0.54);\n  text-align: center;\n  padding: 0 0 ${({ theme }) => theme.scale.base} 0;\n  margin: 0;\n`;\n\nexport const ServerErrorMessage = styled.p`\n  color: ${({ theme }) => theme.colors.secondary};\n  text-align: center;\n`;\n\nexport const BaseButton = styled.button`\n  display: block;\n  height: 40px;\n  width: 150px;\n  font-size: ${({ theme }) => theme.scale.base};\n  background-color: ${({ theme }) => theme.colors.primary};\n  color: white;\n  border-radius: 40px;\n  font-weight: 100;\n  border: none;\n  :disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const SubmitButton = BaseButton.extend``;\n\nexport const ErrorMessage = styled.p`\n  min-height: 40px;\n  max-width: 280px;\n  padding: 0 0 0 10px;\n  font-style: italic;\n  color: ${({ theme }) => theme.colors.secondary};\n  margin: 6px 20px 6px 0px;\n`;\n\nexport const Label = styled.label`\n  font-style: italic;\n  color: rgba(0, 0, 0, 0.54);\n  margin-left: 20px;\n  span {\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n\ninterface TStyledFieldProps {\n  type: string;\n  name: string;\n  id: string;\n}\n\nexport const StyledField = styled<TStyledFieldProps>(Field)`\n  border: 2px solid ${({ theme }) => theme.colors.quaternary};\n  height: 40px;\n  width: 300px;\n  border-radius: 30px;\n  font-size: ${({ theme }) => theme.scale.base};\n  color: rgba(0, 0, 0, 0.87);\n  padding-left: 16px;\n`;\n\nexport const BottomLink = styled(Link)`\n  margin-top: ${({ theme }) => theme.scale.first};\n  font-style: italic;\n  color: ${({ theme }) => theme.colors.quaternary};\n  text-align: center;\n  :hover {\n    color: ${({ theme }) => theme.colors.tertiary};\n  }\n  align-self: stretch;\n`;\n\nexport const InputBlock = styled.div``;\n\nexport const BlockWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  @media (max-width: 600px) {\n    justify-content: center;\n  }\n`;\n","import * as styledComponents from \"styled-components\";\nimport { ThemedStyledComponentsModule } from \"styled-components\";\n\nimport { TTheme } from \"./types\";\n\nconst {\n  default: styled,\n  css,\n  injectGlobal,\n  keyframes,\n  ThemeProvider,\n  withTheme\n} = styledComponents as ThemedStyledComponentsModule<TTheme>;\n\nexport { css, injectGlobal, keyframes, ThemeProvider, withTheme };\nexport default styled;\n","module.exports = require(\"react-router-dom\");","module.exports = require(\"redux-saga/effects\");","import mongoose, {\n  HookSyncCallback,\n  Types,\n  Schema,\n  Model,\n  Document\n} from \"mongoose\";\nimport crypto from \"crypto\";\nimport config from \"config\";\n\nimport {\n  TUserDocument,\n  TUserModel,\n  TUserSchema,\n  TUser,\n  TUserPublicFields,\n  TUserUpdateFields\n} from \"./types\";\n\nconst userSchema: TUserSchema = new mongoose.Schema({\n  username: {\n    type: String,\n    required: true,\n    minlength: 3,\n    maxlength: 30,\n    trim: true,\n    lowercase: true,\n    unique: true\n  },\n  email: {\n    type: String,\n    required: true,\n    lowercase: true,\n    maxlength: 60,\n    trim: true,\n    unique: true\n  },\n  firstName: {\n    type: String,\n    trim: true,\n    maxlength: 30\n  },\n  lastName: {\n    type: String,\n    trim: true,\n    maxlength: 30\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6,\n    maxlength: 30\n  },\n  salt: {\n    type: String\n  }\n});\n\nuserSchema.set(\"timestamps\", true);\n\nuserSchema.statics = {\n  publicFields: [\n    \"_id\",\n    \"username\",\n    \"firstName\",\n    \"lastName\",\n    \"email\",\n    \"createdAt\",\n    \"updatedAt\"\n  ],\n\n  updateFields: [\"username\", \"firstName\", \"lastName\", \"email\", \"password\"],\n\n  filterPublicFields(userOrUsers: any): any {\n    if (Array.isArray(userOrUsers)) {\n      return userOrUsers.map(rawUser => {\n        return this.publicFields.reduce(\n          (acc, field) => {\n            acc[field] = rawUser[field];\n            return acc;\n          },\n          {} as Pick<TUser, TUserPublicFields>\n        );\n      });\n    } else {\n      return userSchema.statics.publicFields.reduce(\n        (acc, field) => {\n          acc[field] = userOrUsers[field];\n          return acc;\n        },\n        {} as Pick<TUser, TUserPublicFields>\n      );\n    }\n  },\n\n  filterUpdateFields(user) {\n    return userSchema.statics.updateFields.reduce(\n      (acc, field) => {\n        acc[field] = user[field];\n        return acc;\n      },\n      {} as Pick<TUser, TUserUpdateFields>\n    );\n  }\n};\n\nconst { length, iterations, algorithm } = config.get(\"crypto\");\n\nuserSchema.pre<TUserDocument>(\"save\", function(next) {\n  crypto.randomBytes(length, (err, randB) => {\n    if (err) return next(err);\n\n    const salt = (this.salt = randB.toString(\"base64\"));\n\n    crypto.pbkdf2(\n      this.password,\n      salt,\n      iterations,\n      length,\n      algorithm,\n      (err, derivedKey) => {\n        if (err) return next(err);\n        this.password = derivedKey.toString(\"base64\");\n        next();\n      }\n    );\n  });\n});\n\nuserSchema.methods.checkPassword = function(password: string) {\n  return new Promise((resolve, reject) => {\n    password = password.trim();\n    if (!password)\n      return reject(new Error(\"You must provide a password to check.\"));\n\n    crypto.pbkdf2(\n      password,\n      this.salt,\n      iterations,\n      length,\n      algorithm,\n      (err, derivedKey) => {\n        if (err) return reject(err);\n        resolve(this.password === derivedKey.toString(\"base64\"));\n      }\n    );\n  });\n};\n\nexport default mongoose.model<TUserDocument, TUserModel>(\"User\", userSchema);\n","module.exports = require(\"polished\");","import { RouteComponentProps } from \"react-router-dom\";\nimport {\n  TUser,\n  TGlobalState,\n  TRemoveLoggedInUserActionCreator\n} from \"../../../types\";\n\nexport interface TSingleUserProps\n  extends TGlobalState,\n    RouteComponentProps<{ id: string }> {\n  fetchSingleUserRequested: TFetchSingleUserRequestedActionCreator;\n  fetchSingleUserSucceeded: TFetchSingleUserSucceededActionCreator;\n  fetchSingleUserFailed: TFetchSingleUserFailedActionCreator;\n  removeUser: TRemoveUserActionCreator;\n  removeLoggedInUser: TRemoveLoggedInUserActionCreator;\n}\n\nexport interface TOwnProps extends RouteComponentProps<{ id: string }> {}\n\nexport enum fetchSingleUserTypes {\n  FETCH_SINGLE_USER_REQUESTED = \"FETCH_SINGLE_USER_REQUESTED\",\n  FETCH_SINGLE_USER_SUCCEEDED = \"FETCH_SINGLE_USER_SUCCEEDED\",\n  FETCH_SINGLE_USER_FAILED = \"FETCH_SINGLE_USER_FAILED\"\n}\n\nexport interface TFetchSingleUserRequestedAction {\n  type: fetchSingleUserTypes.FETCH_SINGLE_USER_REQUESTED;\n  id: string;\n}\nexport interface TFetchSingleUserSucceededAction {\n  type: fetchSingleUserTypes.FETCH_SINGLE_USER_SUCCEEDED;\n  user: TUser;\n}\nexport interface TFetchSingleUserFailedAction {\n  type: fetchSingleUserTypes.FETCH_SINGLE_USER_FAILED;\n  error: Error;\n}\nexport type TFetchSingleUserActions =\n  | TFetchSingleUserRequestedAction\n  | TFetchSingleUserSucceededAction\n  | TFetchSingleUserFailedAction;\n\nexport interface TFetchSingleUserRequestedActionCreator {\n  (id: string): TFetchSingleUserRequestedAction;\n}\nexport interface TFetchSingleUserSucceededActionCreator {\n  (user: TUser): TFetchSingleUserSucceededAction;\n}\nexport interface TFetchSingleUserFailedActionCreator {\n  (error: Error): TFetchSingleUserFailedAction;\n}\n\n/**\n * REMOVE USER\n */\n\nexport enum removeUserTypes {\n  REMOVE_USER = \"REMOVE_USER\"\n}\n\nexport interface TRemoveUserAction {\n  type: removeUserTypes.REMOVE_USER;\n  id: string;\n}\n\nexport interface TRemoveUserActionCreator {\n  (id: string): TRemoveUserAction;\n}\n","module.exports = require(\"yup\");","module.exports = require(\"react-redux\");","import { TUser } from \"../../../types\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { TGlobalState } from \"../../../types\";\n\nexport interface TUserListProps extends TGlobalState, RouteComponentProps<{}> {\n  readonly usersFetchRequested: TUsersFetchRequestedActionCreator;\n  readonly usersFetchSucceeded: TUsersFetchSucceededActionCreator;\n  readonly usersFetchFailed: TUsersFetchFailedActionCreator;\n}\n\nexport enum UsersFetchActionTypes {\n  USERS_FETCH_REQUESTED = \"USERS_FETCH_REQUESTED\",\n  USERS_FETCH_SUCCEEDED = \"USERS_FETCH_SUCCEEDED\",\n  USERS_FETCH_FAILED = \"USERS_FETCH_FAILED\"\n}\n\nexport interface TUsersFetchRequestedAction {\n  readonly type: UsersFetchActionTypes.USERS_FETCH_REQUESTED;\n}\nexport interface TUsersFetchSucceededAction {\n  readonly type: UsersFetchActionTypes.USERS_FETCH_SUCCEEDED;\n  readonly users: TUser[];\n}\nexport interface TUsersFetchFailedAction {\n  readonly type: UsersFetchActionTypes.USERS_FETCH_FAILED;\n  readonly error: Error;\n}\nexport type TUsersFetchActions =\n  | TUsersFetchRequestedAction\n  | TUsersFetchSucceededAction\n  | TUsersFetchFailedAction;\n\nexport interface TUsersFetchRequestedActionCreator {\n  (): TUsersFetchRequestedAction;\n}\nexport interface TUsersFetchSucceededActionCreator {\n  (users: TUser[]): TUsersFetchSucceededAction;\n}\nexport interface TUsersFetchFailedActionCreator {\n  (err: Error): TUsersFetchFailedAction;\n}\n","module.exports = require(\"config\");","import { RouteComponentProps } from \"react-router-dom\";\n\nimport { TGlobalState, TUser } from \"../../../types\";\n\nexport interface TEditProfileProps\n  extends RouteComponentProps<{ id: string }>,\n    TGlobalState {\n  userFetchRequested: TUserFetchRequestedActionCreator;\n  userUpdateSucceeded: TUserUpdateSucceededActionCreator;\n}\n\nexport interface TFetchUserApiService {\n  (id: string): Promise<TUser | null> | void;\n}\n\n/**\n * USER FETCH\n */\n\nexport enum userFetchTypes {\n  USER_FETCH_REQUESTED = \"USER_FETCH_REQUESTED\",\n  USER_FETCH_SUCCEEDED = \"USER_FETCH_SUCCEEDED\",\n  USER_FETCH_FAILED = \"USER_FETCH_FAILED\"\n}\n\nexport interface TUserFetchRequestedAction {\n  type: userFetchTypes.USER_FETCH_REQUESTED;\n  id: string;\n}\nexport interface TUserFetchSucceededAction {\n  type: userFetchTypes.USER_FETCH_SUCCEEDED;\n  user: TUser;\n}\nexport interface TUserFetchFailedAction {\n  type: userFetchTypes.USER_FETCH_FAILED;\n  error: Error;\n}\nexport type TUserFetchActions =\n  | TUserFetchRequestedAction\n  | TUserFetchSucceededAction\n  | TUserFetchFailedAction;\n\nexport interface TUserFetchRequestedActionCreator {\n  (id: string): TUserFetchRequestedAction;\n}\nexport interface TUserFetchSucceededActionCreator {\n  (user: TUser): TUserFetchSucceededAction;\n}\nexport interface TUserFetchFailedActionCreator {\n  (error: Error): TUserFetchFailedAction;\n}\n\n/**\n * UPDATE USER\n */\n\nexport enum userUpdateTypes {\n  USER_UPDATE_SUCCEEDED = \"USER_UPDATE_SUCCEEDED\"\n}\n\nexport interface TUserUpdateSucceededAction {\n  type: userUpdateTypes.USER_UPDATE_SUCCEEDED;\n  user: TUser;\n}\n\nexport interface TUserUpdateSucceededActionCreator {\n  (user: TUser): TUserUpdateSucceededAction;\n}\n","module.exports = require(\"axios\");","module.exports = require(\"formik\");","module.exports = require(\"express\");","import {\n  TAddLoggedInUserActionCreator,\n  TRemoveLoggedInUserActionCreator,\n  loggedInUserTypes\n} from \"./types\";\n\nexport const addLoggedInUser: TAddLoggedInUserActionCreator = user => {\n  return {\n    type: loggedInUserTypes.ADD_LOGGED_IN_USER,\n    user\n  };\n};\n\nexport const removeLoggedInUser: TRemoveLoggedInUserActionCreator = () => {\n  return {\n    type: loggedInUserTypes.REMOVE_LOGGED_IN_USER\n  };\n};\n","module.exports = require(\"mongoose\");","import { Types } from \"mongoose\";\nimport { Store } from \"redux\";\nimport { Task, END } from \"redux-saga\";\n\nexport interface TUser {\n  // not readonly because it is supposed to be converted from object to string and reassigned\n  _id: string;\n  readonly username: string;\n  readonly email: string;\n  readonly firstName?: string;\n  readonly lastName?: string;\n  readonly createdAt: Date;\n  readonly updatedAt: Date;\n}\n\nexport interface TGlobalState {\n  readonly users: TUser[];\n  loggedInUser: TUser | null;\n  readonly requestInProgress: boolean;\n  readonly error: Error | null;\n}\n\n// action types\n\nexport enum loggedInUserTypes {\n  ADD_LOGGED_IN_USER = \"ADD_AUTHED_USER\",\n  REMOVE_LOGGED_IN_USER = \"REMOVE_AUTHED_USER\"\n}\n\nexport interface TAddLoggedInUserAction {\n  readonly type: loggedInUserTypes.ADD_LOGGED_IN_USER;\n  readonly user: TUser;\n}\n\nexport interface TRemoveLoggedInUserAction {\n  readonly type: loggedInUserTypes.REMOVE_LOGGED_IN_USER;\n}\n\nexport type TLoggedInUserActionTypes =\n  | TAddLoggedInUserAction\n  | TRemoveLoggedInUserAction;\n\nexport interface TAddLoggedInUserActionCreator {\n  (user: TUser): TAddLoggedInUserAction;\n}\n\nexport interface TRemoveLoggedInUserActionCreator {\n  (): TRemoveLoggedInUserAction;\n}\n\nexport interface TCustomStore<T> extends Store<T> {\n  runSaga: (saga: () => Iterator<any>) => Task;\n  close: () => END;\n}\n\nexport interface TTheme {\n  readonly colors: {\n    readonly primary: string;\n    readonly secondary: string;\n    readonly tertiary: string;\n    readonly quaternary: string;\n  };\n  readonly scale: {\n    readonly sixth: string;\n    readonly fifth: string;\n    readonly fourth: string;\n    readonly third: string;\n    readonly second: string;\n    readonly first: string;\n    readonly base: string;\n    readonly mFirst: string;\n    readonly mSecond: string;\n  };\n}\n","module.exports = require(\"passport\");","import {\n  userFetchTypes,\n  userUpdateTypes,\n  TUserFetchRequestedActionCreator,\n  TUserFetchSucceededActionCreator,\n  TUserFetchFailedActionCreator,\n  TUserUpdateSucceededActionCreator\n} from \"./types\";\n\nexport const userFetchRequested: TUserFetchRequestedActionCreator = id => {\n  return {\n    type: userFetchTypes.USER_FETCH_REQUESTED,\n    id\n  };\n};\n\nexport const userFetchSucceeded: TUserFetchSucceededActionCreator = user => {\n  return {\n    type: userFetchTypes.USER_FETCH_SUCCEEDED,\n    user\n  };\n};\n\nexport const userFetchFailed: TUserFetchFailedActionCreator = error => {\n  return {\n    type: userFetchTypes.USER_FETCH_FAILED,\n    error\n  };\n};\n\nexport const userUpdateSucceeded: TUserUpdateSucceededActionCreator = user => {\n  return {\n    type: userUpdateTypes.USER_UPDATE_SUCCEEDED,\n    user\n  };\n};\n","module.exports = require(\"redux\");","import {\n  TFetchSingleUserRequestedActionCreator,\n  TFetchSingleUserSucceededActionCreator,\n  TFetchSingleUserFailedActionCreator,\n  TRemoveUserActionCreator,\n  fetchSingleUserTypes,\n  removeUserTypes\n} from \"./types\";\n\nexport const fetchSingleUserRequested: TFetchSingleUserRequestedActionCreator = id => {\n  return {\n    type: fetchSingleUserTypes.FETCH_SINGLE_USER_REQUESTED,\n    id\n  };\n};\n\nexport const fetchSingleUserSucceeded: TFetchSingleUserSucceededActionCreator = user => {\n  return {\n    type: fetchSingleUserTypes.FETCH_SINGLE_USER_SUCCEEDED,\n    user\n  };\n};\n\nexport const fetchSingleUserFailed: TFetchSingleUserFailedActionCreator = error => {\n  return {\n    type: fetchSingleUserTypes.FETCH_SINGLE_USER_FAILED,\n    error\n  };\n};\n\nexport const removeUser: TRemoveUserActionCreator = id => {\n  return {\n    type: removeUserTypes.REMOVE_USER,\n    id\n  };\n};\n","module.exports = require(\"styled-components\");","module.exports = require(\"crypto\");","module.exports = require(\"redux-saga\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"jsonwebtoken\");","import { object, string } from \"yup\";\n\nexport default object().shape({\n  username: string()\n    .min(3)\n    .max(30)\n    .required(),\n  email: string()\n    .email()\n    .max(60)\n    .required(),\n  firstName: string()\n    .min(2)\n    .max(30),\n  lastName: string()\n    .min(2)\n    .max(30),\n  password: string()\n    .min(6)\n    .max(30)\n    .required()\n});\n","import React, { SFC } from \"react\";\nimport { Formik, FormikActions, FormikValues } from \"formik\";\nimport yup from \"yup\";\nimport styled from \"styledComponents\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  SubmitButton,\n  ErrorMessage,\n  Label,\n  StyledField,\n  Title,\n  ServerErrorMessage,\n  BottomLink,\n  InputBlock,\n  BlockWrapper,\n  StyledForm\n} from \"Components/styled\";\nimport validationSchema from \"./validationSchema\";\nimport { addLoggedInUser } from \"../../../actionCreators\";\n\nimport { TGlobalState } from \"../../../types\";\nimport { TRegistrationProps } from \"./types\";\n\nconst initialValues = {\n  username: \"\",\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  password: \"\",\n  serverErrorMessage: \"\"\n};\n\nfunction onSubmit(\n  props: TRegistrationProps,\n  values: FormikValues,\n  formikBag: FormikActions<FormikValues>\n) {\n  formikBag.setSubmitting(true);\n  axios\n    .post(\"/api/registration\", values)\n    .then(res => {\n      formikBag.setSubmitting(false);\n      props.addLoggedInUser(res.data);\n      props.history.replace(\"/\");\n    })\n    .catch(err => {\n      formikBag.setSubmitting(false);\n      formikBag.setErrors({ serverErrorMessage: err.response.data });\n    });\n}\n\nconst Registration: SFC<TRegistrationProps> = props => {\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit.bind(null, props)}\n      render={({ touched, errors, isSubmitting }) => {\n        return props.loggedInUser ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <>\n            <Title> Registration </Title>\n            {errors.serverErrorMessage && (\n              <ServerErrorMessage>\n                Server error: {errors.serverErrorMessage}\n              </ServerErrorMessage>\n            )}\n            <StyledForm>\n              <InputBlock>\n                <Label htmlFor=\"username\">\n                  Username <span>*</span>\n                </Label>\n                <br />\n                <StyledField type=\"text\" name=\"username\" id=\"username\" />\n                <ErrorMessage>\n                  {touched.username && errors.username && errors.username}\n                </ErrorMessage>\n              </InputBlock>\n              <InputBlock>\n                <Label htmlFor=\"email\">\n                  Email <span>*</span>\n                </Label>\n                <br />\n                <StyledField type=\"email\" name=\"email\" id=\"email\" />\n                <ErrorMessage>\n                  {touched.email && errors.email && errors.email}\n                </ErrorMessage>\n              </InputBlock>\n              <InputBlock>\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <br />\n                <StyledField type=\"text\" name=\"firstName\" id=\"firstName\" />\n                <ErrorMessage>\n                  {touched.firstName && errors.firstName && errors.firstName}\n                </ErrorMessage>\n              </InputBlock>\n              <InputBlock>\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <br />\n                <StyledField type=\"text\" name=\"lastName\" id=\"lastName\" />\n                <ErrorMessage>\n                  {touched.lastName && errors.lastName && errors.lastName}\n                </ErrorMessage>\n              </InputBlock>\n              <BlockWrapper>\n                <InputBlock>\n                  <Label htmlFor=\"password\">\n                    Password <span>*</span>\n                  </Label>\n                  <br />\n                  <StyledField type=\"password\" name=\"password\" id=\"password\" />\n                  <ErrorMessage>\n                    {touched.password && errors.password && errors.password}\n                  </ErrorMessage>\n                </InputBlock>\n              </BlockWrapper>\n              <BlockWrapper>\n                <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </SubmitButton>\n              </BlockWrapper>\n              <BlockWrapper>\n                <BottomLink to=\"/login\">\n                  …or log in if you have an account.\n                </BottomLink>\n              </BlockWrapper>\n            </StyledForm>\n          </>\n        );\n      }}\n    />\n  );\n};\n\nfunction mapStateToProps(state: TGlobalState) {\n  return {\n    loggedInUser: state.loggedInUser\n  };\n}\n\nexport default connect(mapStateToProps, { addLoggedInUser })(Registration);\n","import styled from \"styledComponents\";\nimport { Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nexport const InputBlock = styled.div`\n  width: 300px;\n`;\n\nexport const DefaultUserMessage = styled.div`\n  margin-top: ${({ theme }) => theme.scale.base};\n  padding: ${({ theme }) => theme.scale.base};\n  color: rgba(0, 0, 0, 0.38);\n  font-weight: 100;\n  font-style: italic;\n  text-align: center;\n  > span {\n    font-weight: bold;\n  }\n`;\n","import { object, string } from \"yup\";\n\nexport default object().shape({\n  username: string()\n    .min(3)\n    .max(30)\n    .required(),\n  password: string()\n    .min(6)\n    .max(30)\n    .required()\n});\n","import React, { SFC } from \"react\";\nimport { Formik, FormikValues, FormikActions } from \"formik\";\nimport axios, { AxiosError } from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  Title,\n  ServerErrorMessage,\n  StyledField,\n  ErrorMessage,\n  Label,\n  SubmitButton,\n  BottomLink\n} from \"Components/styled\";\n\nimport { InputBlock, StyledForm, DefaultUserMessage } from \"./components\";\nimport validationSchema from \"./validationSchema\";\nimport * as actionCreators from \"../../../actionCreators\";\n\nimport { TLoginProps } from \"./types\";\nimport { TGlobalState } from \"../../../types\";\n\nlet initialValues = {\n  username: \"\",\n  password: \"\",\n  serverErrorMessage: \"\"\n};\n\nif (__CLIENT__ && !localStorage.notFirstVisit) {\n  initialValues = {\n    username: \"elon\",\n    password: \"123123\",\n    serverErrorMessage: \"\"\n  };\n  localStorage.setItem(\"notFirstVisit\", \"1\");\n}\n\nfunction onSubmit(\n  props: TLoginProps,\n  values: FormikValues,\n  formikBag: FormikActions<FormikValues>\n) {\n  formikBag.setSubmitting(true);\n  delete values.serverErrorMessage;\n  axios\n    .post(\"/api/login\", values)\n    .then(res => {\n      formikBag.setSubmitting(false);\n      props.addLoggedInUser(res.data);\n      props.history.replace(\"/\");\n    })\n    .catch((err: AxiosError) => {\n      formikBag.setSubmitting(false);\n      formikBag.setErrors({ serverErrorMessage: err!.response!.data });\n    });\n}\n\nconst Login: SFC<TLoginProps> = props => (\n  <Formik\n    initialValues={initialValues}\n    validationSchema={validationSchema}\n    onSubmit={onSubmit.bind(null, props)}\n    render={({ touched, errors, isSubmitting }) => {\n      return props.loggedInUser ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <>\n          <Title>Login</Title>\n          {errors.serverErrorMessage && (\n            <ServerErrorMessage>\n              Server error: {errors.serverErrorMessage}\n            </ServerErrorMessage>\n          )}\n          <StyledForm>\n            <InputBlock>\n              <Label htmlFor=\"username\">\n                Username <span>*</span>\n              </Label>\n              <br />\n              <StyledField type=\"text\" name=\"username\" id=\"username\" />\n              <ErrorMessage>\n                {touched.username && errors.username && errors.username}\n              </ErrorMessage>\n            </InputBlock>\n            <InputBlock>\n              <Label htmlFor=\"password\">\n                Password <span>*</span>\n              </Label>\n              <br />\n              <StyledField type=\"password\" name=\"password\" id=\"password\" />\n              <ErrorMessage>\n                {touched.password && errors.password && errors.password}\n              </ErrorMessage>\n            </InputBlock>\n            <SubmitButton>Log in</SubmitButton>\n            <BottomLink to=\"/registration\">\n              ...or register a new account if you don't have one.\n            </BottomLink>\n            <DefaultUserMessage>\n              The default profile username is <span>elon</span> and the password\n              is <span>123123</span>\n            </DefaultUserMessage>\n          </StyledForm>\n        </>\n      );\n    }}\n  />\n);\n\nfunction mapStateToProps(state: TGlobalState) {\n  return {\n    loggedInUser: state.loggedInUser\n  };\n}\n\nexport default connect(mapStateToProps, actionCreators)(Login);\n","import styled from \"styledComponents\";\nimport { rgba } from \"polished\";\nimport { Link } from \"react-router-dom\";\n\nexport const Card = styled.article`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  border-radius: ${({ theme }) => theme.scale.first};\n  padding: ${({ theme }) => theme.scale.first};\n  box-shadow: 0 4px 16px ${({ theme }) => rgba(theme.colors.quaternary, 0.54)};\n`;\n\nexport const FullName = styled.h2`\n  margin: 0;\n  font-size: ${({ theme }) => theme.scale.second};\n  color: rgba(0, 0, 0 0.87);\n  font-weight: normal;\n`;\n\nexport const Username = styled.h3`\n  margin: 0;\n  color: rgba(0, 0, 0, 0.54);\n  font-weight: normal;\n`;\n\nexport const Email = styled.p`\n  margin: ${({ theme }) => theme.scale.second} 0 0 0;\n  color: rgba(0, 0, 0, 0.54);\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const RegisteredSince = styled.p`\n  margin: ${({ theme }) => theme.scale.first} 0 0 0;\n  color: rgba(0, 0, 0, 0.54);\n  span {\n    font-weight: bold;\n  }\n`;\n\nexport const Buttons = styled.section`\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-top: ${({ theme }) => theme.scale.third};\n`;\n\nexport const BaseButton = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-basis: ${({ theme }) => theme.scale.fifth};\n  height: ${({ theme }) => theme.scale.second};\n  border: none;\n  border-radius: ${({ theme }) => theme.scale.second};\n  color: white;\n  font-size: ${({ theme }) => theme.scale.base};\n  text-decoration: none;\n  :last-child {\n    margin-left: ${({ theme }) => theme.scale.second};\n  }\n  padding: 0;\n`;\n\nexport const EditButton = BaseButton.extend`\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`;\n\nexport const DeleteButton = BaseButton.withComponent(\"button\").extend`\n  background-color: ${({ theme }) => theme.colors.secondary};\n  cursor: pointer;\n`;\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: ${({ theme }) => theme.scale.first};\n  width: ${({ theme }) => theme.scale.fourth};\n  height: ${({ theme }) => theme.scale.second};\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: ${({ theme }) => theme.scale.second};\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.tertiary};\n  opacity: 0.6;\n  transition: opacity 100ms;\n  :hover {\n    opacity: 1;\n    background-color: rgba(255, 255, 255, 0.6);\n  }\n`;\n","import React, { SFC } from \"react\";\nimport { withTheme } from \"styledComponents\";\n\nimport { TArrowBackProps } from \"./types\";\n\nconst ArrowBack: SFC<TArrowBackProps> = ({\n  theme,\n  width = 18,\n  height = 18\n}) => {\n  return (\n    <svg width={width} height={height} xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M18 7.895v2.21H4.311l6.279 6.305L9 18 0 9l9-9 1.59 1.59L4.31 7.895z\"\n        fill={theme.colors.tertiary}\n        fillRule=\"evenodd\"\n      />\n    </svg>\n  );\n};\n\nexport default withTheme(ArrowBack);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  Card,\n  FullName,\n  Username,\n  Email,\n  RegisteredSince,\n  Buttons,\n  EditButton,\n  DeleteButton,\n  BackButton\n} from \"./components/styled\";\nimport ArrowBack from \"./components/ArrowBack\";\nimport * as actionCreators from \"./actionCreators\";\nimport { removeLoggedInUser } from \"../../../actionCreators\";\n\nimport { TSingleUserProps, TOwnProps } from \"./types\";\nimport { TGlobalState, TUser } from \"../../../types\";\n\nclass SingleUser extends Component<TSingleUserProps> {\n  constructor(props: TSingleUserProps) {\n    super(props);\n\n    if (__SERVER__) props.fetchSingleUserRequested(this.props.match.params.id);\n  }\n\n  removeUser = () => {\n    const {\n      history,\n      match: {\n        params: { id }\n      },\n      removeUser,\n      removeLoggedInUser\n    } = this.props;\n    removeUser(id);\n    removeLoggedInUser();\n    history.push(\"/login\");\n  };\n\n  render() {\n    const {\n      users,\n      match: {\n        params: { id: idUrlParam }\n      }\n    } = this.props;\n\n    if (!/^[0-9a-fA-F]{24}$/.test(idUrlParam) || !users.length) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const { firstName, lastName, username, email, createdAt } = users.find(\n      user => user._id === idUrlParam\n    )!;\n    const { _id: loggedInUserId } = this.props.loggedInUser!;\n\n    return (\n      <>\n        <BackButton to=\"/\">\n          <ArrowBack />\n          <p>Back</p>\n        </BackButton>\n        <Card>\n          {firstName || lastName ? (\n            <>\n              <FullName>\n                {firstName} {lastName}\n              </FullName>\n              <Username>@{username}</Username>\n            </>\n          ) : (\n            <FullName>@{username}</FullName>\n          )}\n          <Email>\n            <span>Email:</span> {email}\n          </Email>\n          <RegisteredSince>\n            <span>Registered since: </span>\n            {new Date(createdAt).toDateString()}\n          </RegisteredSince>\n          {loggedInUserId === idUrlParam && (\n            <Buttons>\n              <EditButton to={`/${idUrlParam}/edit`}>Edit profile</EditButton>\n              {/* the \"to\" attribute is for solving a type issue */}\n              <DeleteButton to=\"\" onClick={this.removeUser}>\n                Delete account\n              </DeleteButton>\n            </Buttons>\n          )}\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default connect(state => state, {\n  ...actionCreators,\n  removeLoggedInUser\n})(SingleUser);\n","import styled from \"styledComponents\";\n\nimport { BaseButton } from \"Components/styled\";\n\nexport const CancelButton = BaseButton.extend`\n  background-color: ${({ theme }) => theme.colors.secondary};\n  margin-right: ${({ theme }) => theme.scale.base};\n`;\n","import { object, string } from \"yup\";\n\nexport default object().shape({\n  username: string()\n    .min(3)\n    .max(30)\n    .required(),\n  email: string()\n    .email()\n    .max(60)\n    .required(),\n  firstName: string()\n    .min(2)\n    .max(30),\n  lastName: string()\n    .min(2)\n    .max(30),\n  password: string()\n    .min(6)\n    .max(30)\n});\n","import React, { SFC } from \"react\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Formik, FormikValues, FormikActions } from \"formik\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport {\n  SubmitButton,\n  ErrorMessage,\n  Label,\n  StyledField,\n  Title,\n  ServerErrorMessage,\n  BottomLink,\n  InputBlock,\n  BlockWrapper,\n  StyledForm\n} from \"Components/styled\";\nimport { CancelButton } from \"./components/styled\";\nimport validationSchema from \"./validationSchema\";\nimport { userFetchRequested, userUpdateSucceeded } from \"./actionCreators\";\n\nimport { TEditProfileProps, userFetchTypes } from \"./types\";\n\nfunction onSubmit(\n  props: TEditProfileProps,\n  values: FormikValues,\n  actions: FormikActions<FormikValues>\n) {\n  const {\n    match: {\n      params: { id }\n    }\n  } = props;\n  actions.setSubmitting(true);\n  delete values.serverErrorMessage;\n  axios\n    .post(`/api/${id}/edit`, values)\n    .then(res => {\n      actions.setSubmitting(false);\n      props.userUpdateSucceeded(res.data);\n      props.history.push(`/${id}`);\n    })\n    .catch(err => {\n      actions.setSubmitting(false);\n      actions.setErrors({ serverErrorMessage: err.response.data });\n    });\n}\n\nconst EditProfile: SFC<TEditProfileProps> = props => {\n  const { id: idUrlParam } = props.match.params;\n  if (!props.users.length) props.userFetchRequested(idUrlParam);\n\n  const initialValues = {\n    serverErrorMessage: null,\n    password: \"\",\n    ...props.loggedInUser!\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit.bind(null, props)}\n      render={({ errors, touched, isSubmitting }) => {\n        return !props.loggedInUser ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <>\n            <Title>Edit profile</Title>\n            {errors.serverErrorMessage && (\n              <ServerErrorMessage>\n                Server error: {errors.serverErrorMessage}\n              </ServerErrorMessage>\n            )}\n            <StyledForm>\n              <InputBlock>\n                <Label htmlFor=\"username\">\n                  Username <span>*</span>\n                </Label>\n                <br />\n                <StyledField type=\"text\" name=\"username\" id=\"username\" />\n                <ErrorMessage>\n                  {touched.username && errors.username && errors.username}\n                </ErrorMessage>\n              </InputBlock>\n              <InputBlock>\n                <Label htmlFor=\"email\">\n                  Email <span>*</span>\n                </Label>\n                <br />\n                <StyledField type=\"email\" name=\"email\" id=\"email\" />\n                <ErrorMessage>\n                  {touched.email && errors.email && errors.email}\n                </ErrorMessage>\n              </InputBlock>\n              <InputBlock>\n                <Label htmlFor=\"firstName\">First Name</Label>\n                <br />\n                <StyledField type=\"text\" name=\"firstName\" id=\"firstName\" />\n                <ErrorMessage>\n                  {touched.firstName && errors.firstName && errors.firstName}\n                </ErrorMessage>\n              </InputBlock>\n              <InputBlock>\n                <Label htmlFor=\"lastName\">Last Name</Label>\n                <br />\n                <StyledField type=\"text\" name=\"lastName\" id=\"lastName\" />\n                <ErrorMessage>\n                  {touched.lastName && errors.lastName && errors.lastName}\n                </ErrorMessage>\n              </InputBlock>\n              <BlockWrapper>\n                <InputBlock>\n                  <Label htmlFor=\"password\">\n                    Password <span>*</span>\n                  </Label>\n                  <br />\n                  <StyledField type=\"password\" name=\"password\" id=\"password\" />\n                  <ErrorMessage>\n                    {touched.password && errors.password && errors.password}\n                  </ErrorMessage>\n                </InputBlock>\n              </BlockWrapper>\n              <BlockWrapper>\n                <CancelButton\n                  onClick={() => {\n                    props.history.goBack();\n                  }}\n                >\n                  Cancel\n                </CancelButton>\n                <SubmitButton type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </SubmitButton>\n              </BlockWrapper>\n            </StyledForm>\n          </>\n        );\n      }}\n    />\n  );\n};\n\nconst actions = {\n  userFetchRequested,\n  userUpdateSucceeded\n};\n\nexport default connect(state => state, actions)(EditProfile);\n","import {\n  TUsersFetchRequestedActionCreator,\n  TUsersFetchSucceededActionCreator,\n  TUsersFetchFailedActionCreator,\n  UsersFetchActionTypes\n} from \"./types\";\n\nexport const usersFetchRequested: TUsersFetchRequestedActionCreator = () => {\n  return {\n    type: UsersFetchActionTypes.USERS_FETCH_REQUESTED\n  };\n};\nexport const usersFetchSucceeded: TUsersFetchSucceededActionCreator = users => {\n  return {\n    type: UsersFetchActionTypes.USERS_FETCH_SUCCEEDED,\n    users\n  };\n};\nexport const usersFetchFailed: TUsersFetchFailedActionCreator = error => {\n  return {\n    type: UsersFetchActionTypes.USERS_FETCH_FAILED,\n    error\n  };\n};\n","import styled from \"styledComponents\";\nimport { rgba, stripUnit } from \"polished\";\nimport { Link } from \"react-router-dom\";\n\nimport { TFullNameProps } from \"./types\";\n\nexport const Card = styled(Link)`\n  flex-basis: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: ${({ theme }) => theme.scale.third};\n  padding: 0 ${({ theme }) => theme.scale.first} 0;\n  :not(:first-child) {\n    margin-top: ${({ theme }) => theme.scale.first};\n  }\n  box-shadow: 0 4px 16px ${({ theme }) => rgba(theme.colors.quaternary, 0.54)};\n  text-decoration: none;\n  border: 2px solid transparent;\n  :hover {\n    border: 2px solid ${({ theme }) => theme.colors.primary};\n  }\n  background-color: white;\n  border-radius: ${({ theme }) => theme.scale.mFirst};\n`;\n\nexport const FullName = styled<TFullNameProps, \"h2\">(\"h2\")`\n  display: block;\n  margin: 0;\n  font-size: ${({ theme }) => theme.scale.base};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : \"normal\")}\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nexport const Username = styled.h3`\n  display: block;\n  margin: 0;\n  font-size: ${({ theme }) => theme.scale.base};\n  font-weight: 100;\n  color: rgba(0, 0, 0, 0.54);\n`;\n","import React, { SFC } from \"react\";\nimport styled from \"styledComponents\";\n\nimport { TIsLoggedInUserProps } from \"./types\";\n\nconst ThisIsYou = styled.p`\n  display: inline-block;\n  margin: 0;\n  font-size: ${({ theme }) => theme.scale.base};\n  font-style: italic;\n  font-weight: normal;\n  color: ${({ theme }) => theme.colors.quaternary};\n`;\n\nconst IsLoggedInUser: SFC<TIsLoggedInUserProps> = ({\n  loggedInUserId,\n  userId\n}) => {\n  return loggedInUserId === userId ? (\n    <ThisIsYou> &nbsp; — this is you</ThisIsYou>\n  ) : null;\n};\n\nexport default IsLoggedInUser;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as actionCreators from \"./actionCreators\";\nimport { Card, FullName, Username } from \"./components/styled\";\nimport IsLoggedInUser from \"./components/IsLoggedInUser\";\n\nimport { TUserListProps } from \"./types\";\n\nclass UserList extends Component<TUserListProps> {\n  constructor(props: TUserListProps) {\n    super(props);\n    if (this.props.loggedInUser) this.props.usersFetchRequested();\n  }\n\n  render() {\n    if (this.props.loggedInUser) {\n      const { loggedInUser, users } = this.props;\n      const loggedInUserId = loggedInUser._id;\n\n      return users.map(user => {\n        const { firstName, lastName, username } = user;\n        let userId = user._id;\n        return (\n          <Card key={userId} to={`/${userId}`}>\n            {firstName || lastName ? (\n              <>\n                <FullName bold={loggedInUserId === userId}>\n                  {firstName} {lastName}\n                  <IsLoggedInUser\n                    loggedInUserId={loggedInUserId}\n                    userId={userId}\n                  />\n                </FullName>\n                <Username>@{username}</Username>\n              </>\n            ) : (\n              <FullName bold={loggedInUserId === userId}>\n                @{username}\n                <IsLoggedInUser\n                  loggedInUserId={loggedInUserId}\n                  userId={userId}\n                />\n              </FullName>\n            )}\n          </Card>\n        );\n      });\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\n\nexport default connect(state => state, actionCreators)(UserList);\n","import React, { SFC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styledComponents\";\nimport { rgba } from \"polished\";\n\nimport { THeaderProps } from \"./types\";\n\nconst H = styled.header`\n  display: flex;\n  flex: 0 0 ${({ theme }) => theme.scale.second};\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  box-shadow: 0 4px 16px ${({ theme }) => rgba(theme.colors.quaternary, 0.54)};\n`;\n\nconst UserInfo = styled.section``;\n\nconst Nav = styled.nav`\n  margin: 0 ${({ theme }) => theme.scale.first} 0 auto;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.54);\n  :hover {\n    color: rgba(0, 0, 0, 0.87);\n  }\n`;\n\nconst Header: SFC<THeaderProps> = props => {\n  if ([\"/login\", \"/registration\"].includes(props.location.pathname))\n    return null;\n\n  return (\n    <H>\n      <UserInfo />\n      <Nav>\n        <StyledLink to=\"/logout\">Logout</StyledLink>\n      </Nav>\n    </H>\n  );\n};\n\nexport default Header;\n","import { modularScale } from \"polished\";\nimport { TTheme } from \"./types\";\n\nconst theme: TTheme = {\n  colors: {\n    primary: \"#58CDF7\",\n    secondary: \"#FD739F\",\n    tertiary: \"#84F4E1\",\n    quaternary: \"#D3C4D1\"\n  },\n  scale: {\n    sixth: modularScale(6, 1, \"goldenSection\"),\n    fifth: modularScale(5, 1, \"goldenSection\"),\n    fourth: modularScale(4, 1, \"goldenSection\"),\n    third: modularScale(3, 1, \"goldenSection\"),\n    second: modularScale(2, 1, \"goldenSection\"),\n    first: modularScale(1, 1, \"goldenSection\"),\n    base: modularScale(0, 1, \"goldenSection\"),\n    mFirst: modularScale(-1, 1, \"goldenSection\"),\n    mSecond: modularScale(-2, 1, \"goldenSection\")\n  }\n};\n\nexport default theme;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Dispatch, bindActionCreators } from \"redux\";\n\nimport { removeLoggedInUser } from \"../../../actionCreators\";\n\nimport { TLogoutProps, TLogoutState } from \"./types\";\nimport { TGlobalState, TRemoveLoggedInUserAction } from \"../../../types\";\n\nclass Logout extends Component<TLogoutProps, TLogoutState> {\n  state: TLogoutState = { loggedOut: false };\n\n  componentDidMount() {\n    axios\n      .post(\"/api/logout\")\n      .then(() => {\n        this.props.removeLoggedInUser();\n        this.setState({ loggedOut: true });\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  render() {\n    return this.state.loggedOut ? <Redirect to=\"/login\" /> : \"Redirecting...\";\n  }\n}\n\nfunction mapStateToProps(state: TGlobalState) {\n  return {\n    loggedInUser: state.loggedInUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<TRemoveLoggedInUserAction>) {\n  return bindActionCreators({ removeLoggedInUser }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n","module.exports = require(\"react-hot-loader\");","import React, { SFC } from \"react\";\nimport { Route, Redirect, Switch, withRouter } from \"react-router-dom\";\nimport { hot } from \"react-hot-loader\";\nimport styled, { ThemeProvider } from \"styledComponents\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { rgba } from \"polished\";\n\nimport UserList from \"./screens/UserList\";\nimport SingleUser from \"./screens/SingleUser\";\nimport Login from \"./screens/Login\";\nimport Registration from \"./screens/Registration\";\nimport Logout from \"./screens/Logout\";\nimport EditProfile from \"./screens/EditProfile\";\nimport theme from \"../theme\";\nimport Header from \"./components/Header\";\n\nimport { TGlobalState } from \"../types\";\nimport { TRootProps, TMainProps } from \"./types\";\n\nconst Main = styled<TMainProps, \"main\">(\"main\")`\npadding-top: ${({ theme }) => theme.scale.second}\n  flex-grow: 1;\n  background-color: ${({ theme, location }) => {\n    return ![\"/login\", \"/registration\"].includes(location.pathname)\n      ? rgba(theme.colors.quaternary, 0.12)\n      : \"white\";\n  }};\n  border-top: 1px solid transparent;\n`;\n\nconst MainInner = styled.div`\n  max-width: 630px;\n  margin: 0 auto;\n`;\n\nconst Root: SFC<TRootProps> = props => (\n  <ThemeProvider theme={theme}>\n    <>\n      <Header loggedInUser={props.loggedInUser} location={props.location} />\n      <Main location={props.location}>\n        <MainInner>\n          <Switch>\n            <Route exact path=\"/registration\" component={Registration} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/\" component={UserList} />\n            <Route exact path=\"/:id\" component={SingleUser} />\n            <Route exact path=\"/:id/edit\" component={EditProfile} />\n            <Route render={props => <h2>404 Not Found</h2>} />\n          </Switch>\n        </MainInner>\n      </Main>\n    </>\n  </ThemeProvider>\n);\n\nfunction mapStateToProps(state: TGlobalState) {\n  return {\n    loggedInUser: state.loggedInUser\n  };\n}\n\nexport default hot(module)(withRouter(connect(mapStateToProps)(Root)));\n","module.exports = require(\"react-router\");","module.exports = require(\"lodash/pick\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"serve-favicon\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"path\");","import mongoose from \"mongoose\";\nimport config from \"config\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\n\n// if (isDev) mongoose.set(\"debug\", true);\n\nmongoose.connect(config.get(\"dbUrl\"));\n\nmongoose.connection.on(\"error\", err => {\n  console.error(\"Connection error: \", err);\n});\n","import { Router, RequestHandler } from \"express\";\nimport passport from \"passport\";\nimport _ from \"lodash\";\nimport jwt, { SignOptions } from \"jsonwebtoken\";\nimport config from \"config\";\nimport mongoose from \"mongoose\";\n\nimport User from \"../../models/User\";\nimport { TUser, TUserDocument } from \"../../models/User/types\";\nimport { TRequestErrorWithStatusCode } from \"./types\";\n\nconst router = Router();\n\nconst jwtAuth: RequestHandler = passport.authenticate(\"jwt\", {\n  session: false\n});\n\nconst cookieOptions = {\n  httpOnly: true,\n  expires: new Date(\n    Date.now() + Number.parseInt(config.get(\"cookies.expires\"))\n  ),\n  signed: true\n};\n\nconst jwtOptions: SignOptions = { expiresIn: config.get(\"jwt.expiresIn\") };\n\nconst validateUserIdParam: RequestHandler = (req, res, next) => {\n  if (!mongoose.Types.ObjectId.isValid(req.params.id)) {\n    const err = new Error(\"User id is invalid.\") as TRequestErrorWithStatusCode;\n    err.statusCode = 400;\n    return next(err);\n  }\n  next();\n};\n\nrouter.get(\"/\", jwtAuth, (req, res, next) => {\n  User.find()\n    .lean()\n    .then((rawUsers: TUser[]) => {\n      const filteredUsers = User.filterPublicFields(rawUsers);\n\n      res.json(filteredUsers);\n    })\n    .catch(next);\n});\n\nrouter.get(\"/:id\", jwtAuth, validateUserIdParam, (req, res, next) => {\n  const { id } = req.params;\n\n  User.findById(id)\n    .lean()\n    .then((rawUser: TUser) => {\n      const user = User.filterPublicFields(rawUser);\n      res.json(user);\n    })\n    .catch(next);\n});\n\nrouter.post(\"/:id/edit\", jwtAuth, validateUserIdParam, (req, res, next) => {\n  const { id } = req.params;\n  const body: { [key: string]: string } = {};\n\n  for (const key in req.body) {\n    if (req.body[key]) body[key] = req.body[key];\n  }\n\n  // if the user changes the password, we need to properly save it, otherwise we simply update document fields\n  if (body.password) {\n    User.findById(id)\n      .then(userDoc => {\n        userDoc!.set(body);\n        userDoc!\n          .save()\n          .then(updatedUserDoc => {\n            res.send(User.filterPublicFields(updatedUserDoc));\n          })\n          .catch(next);\n      })\n      .catch(next);\n  } else {\n    User.findByIdAndUpdate(id, body, { new: true })\n      .then(rawUser => {\n        const user = User.filterPublicFields(rawUser!) as TUser;\n        res.json(user);\n      })\n      .catch(next);\n  }\n});\n\nrouter.post(\"/registration\", (req, res, next) => {\n  const newUser = new User(req.body);\n  newUser\n    .save()\n    .then(rawUser => {\n      const user = User.filterPublicFields(rawUser);\n      const payload = { id: user._id };\n\n      jwt.sign(payload, config.get(\"jwt.secret\"), jwtOptions, (err, token) => {\n        if (err) return next(err);\n\n        res.cookie(\"access_token\", token, cookieOptions);\n        res.send(user);\n      });\n    })\n    .catch(next);\n});\n\nrouter.post(\"/login\", (req, res, next) => {\n  const {\n    body: { username, password }\n  } = req;\n\n  if (!username || !password) {\n    const err = new Error(\n      \"You must provide username and password.\"\n    ) as TRequestErrorWithStatusCode;\n    err.statusCode = 400;\n    return next(err);\n  }\n\n  User.findOne({ username }, (err, rawUser) => {\n    if (err) return next(err);\n    if (!rawUser) {\n      const err = new Error(\n        \"Incorrect username or password.\"\n      ) as TRequestErrorWithStatusCode;\n      err.statusCode = 400;\n      return next(err);\n    }\n\n    rawUser\n      .checkPassword(password)\n      .then(isCorrect => {\n        if (!isCorrect) {\n          const err = new Error(\n            \"Password is incorrect\"\n          ) as TRequestErrorWithStatusCode;\n          err.statusCode = 400;\n          return next(err);\n        }\n\n        const user = User.filterPublicFields(rawUser.toObject());\n\n        jwt.sign(\n          { id: user._id },\n          config.get(\"jwt.secret\"),\n          jwtOptions,\n          (err, token) => {\n            if (err) return next(err);\n\n            res.cookie(\"access_token\", token, cookieOptions);\n            res.json(user);\n          }\n        );\n      })\n      .catch(next);\n  });\n});\n\nrouter.post(\"/logout\", (req, res, next) => {\n  res.clearCookie(\"access_token\");\n  delete req.user;\n  res.status(200).send(\"Logged out\");\n});\n\nrouter.delete(\"/delete/:id\", jwtAuth, validateUserIdParam, (req, res, next) => {\n  const { id } = req.params;\n  User.findByIdAndRemove(id).catch(next);\n});\n\nexport default router;\n","import userListReducer from \"./Root/screens/UserList/reducers\";\nimport singleUserReducer from \"./Root/screens/SingleUser/reducers\";\nimport editProfileReducer from \"./Root/screens/EditProfile/reducers\";\n\nimport {\n  TUsersFetchActions,\n  UsersFetchActionTypes\n} from \"./Root/screens/UserList/types\";\nimport {\n  TGlobalState,\n  TUser,\n  loggedInUserTypes,\n  TLoggedInUserActionTypes\n} from \"./types\";\nimport {\n  fetchSingleUserTypes,\n  TFetchSingleUserActions\n} from \"./Root/screens/SingleUser/types\";\nimport {\n  TUserUpdateSucceededAction,\n  userUpdateTypes\n} from \"./Root/screens/EditProfile/types\";\n\ntype ActionTypes =\n  | TLoggedInUserActionTypes\n  | TUsersFetchActions\n  | TFetchSingleUserActions\n  | TUserUpdateSucceededAction;\n\nexport default function rootReducer(state: TGlobalState, action: ActionTypes) {\n  switch (action.type) {\n    case loggedInUserTypes.ADD_LOGGED_IN_USER:\n      return { ...state, loggedInUser: action.user };\n    case loggedInUserTypes.REMOVE_LOGGED_IN_USER:\n      return { ...state, loggedInUser: null };\n\n    case UsersFetchActionTypes.USERS_FETCH_REQUESTED:\n    case UsersFetchActionTypes.USERS_FETCH_SUCCEEDED:\n    case UsersFetchActionTypes.USERS_FETCH_FAILED:\n      return userListReducer(state, action);\n\n    case fetchSingleUserTypes.FETCH_SINGLE_USER_REQUESTED:\n    case fetchSingleUserTypes.FETCH_SINGLE_USER_SUCCEEDED:\n    case fetchSingleUserTypes.FETCH_SINGLE_USER_FAILED:\n      return singleUserReducer(state, action);\n\n    case userUpdateTypes.USER_UPDATE_SUCCEEDED:\n      return editProfileReducer(state, action);\n\n    default:\n      return state;\n  }\n}\n","import { UsersFetchActionTypes, TUsersFetchActions } from \"./types\";\nimport { TGlobalState } from \"../../../types\";\n\nexport default function userList(\n  state: TGlobalState,\n  action: TUsersFetchActions\n) {\n  switch (action.type) {\n    case UsersFetchActionTypes.USERS_FETCH_REQUESTED:\n      return { ...state, requestInProgress: true };\n    case UsersFetchActionTypes.USERS_FETCH_SUCCEEDED:\n      return { ...state, users: action.users, requestInProgress: false };\n    case UsersFetchActionTypes.USERS_FETCH_FAILED:\n      return { ...state, error: action.error, requestInProgress: false };\n    default:\n      return state;\n  }\n}\n","import { TGlobalState } from \"../../../types\";\nimport {\n  TFetchSingleUserActions,\n  TRemoveUserAction,\n  fetchSingleUserTypes,\n  removeUserTypes\n} from \"./types\";\n\nexport default function singleUserReducer(\n  state: TGlobalState,\n  action: TFetchSingleUserActions | TRemoveUserAction\n) {\n  switch (action.type) {\n    case fetchSingleUserTypes.FETCH_SINGLE_USER_REQUESTED:\n      return { ...state, requestInProgress: true };\n    case fetchSingleUserTypes.FETCH_SINGLE_USER_SUCCEEDED:\n      return {\n        ...state,\n        users: [...state.users, { ...action.user }],\n        requestInProgress: false\n      };\n    case fetchSingleUserTypes.FETCH_SINGLE_USER_FAILED:\n      return { ...state, error: action.error, requestInProgress: false };\n\n    case removeUserTypes.REMOVE_USER:\n      const { users } = state;\n      const idx = users.findIndex(user => user._id === action.id);\n      return {\n        ...state,\n        users: [...users.slice(0, idx), ...users.slice(idx + 1)]\n      };\n\n    default:\n      return state;\n  }\n}\n","import { TGlobalState } from \"../../../types\";\nimport {\n  TUserFetchActions,\n  TUserUpdateSucceededAction,\n  userFetchTypes,\n  userUpdateTypes\n} from \"./types\";\n\nexport default function editPropfileReducer(\n  state: TGlobalState,\n  action: TUserFetchActions | TUserUpdateSucceededAction\n) {\n  switch (action.type) {\n    case userFetchTypes.USER_FETCH_REQUESTED:\n      return { ...state, requestInProgress: true };\n    case userFetchTypes.USER_FETCH_SUCCEEDED:\n      return {\n        ...state,\n        requestInProgress: false,\n        users: [...state.users, action.user]\n      };\n    case userFetchTypes.USER_FETCH_FAILED:\n      return { ...state, requestInProgress: false, error: action.error };\n    case userUpdateTypes.USER_UPDATE_SUCCEEDED:\n      const { users } = state;\n      let idx = users.findIndex(user => user._id === action.user._id);\n      return {\n        ...state,\n        requestInProgress: false,\n        users: [...users.slice(0, idx), action.user, ...users.slice(++idx)],\n        loggedInUser: action.user\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, StoreEnhancer, applyMiddleware } from \"redux\";\nimport createSagaMiddleware, { END } from \"redux-saga\";\n\nimport rootReducer from \"./rootReducer\";\n\nimport { TGlobalState, TCustomStore } from \"./types\";\n\nexport const defaultState: TGlobalState = {\n  users: [],\n  loggedInUser: null,\n  requestInProgress: false,\n  error: null\n};\n\nexport default function configureStore(preloadedState = defaultState) {\n  const enhancers: StoreEnhancer<TGlobalState>[] = [];\n\n  const sagaMiddleware = createSagaMiddleware();\n  enhancers.push(applyMiddleware(sagaMiddleware));\n\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    typeof window === \"object\" &&\n    typeof window.__REDUX_DEVTOOLS_EXTENSION__ === \"function\"\n  ) {\n    enhancers.push(window.__REDUX_DEVTOOLS_EXTENSION__());\n  }\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    compose(...enhancers)\n  ) as TCustomStore<TGlobalState>;\n\n  store.runSaga = sagaMiddleware.run;\n  store.close = () => store.dispatch(END);\n\n  return store;\n}\n","import { injectGlobal } from \"styledComponents\";\n\ninjectGlobal`\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    height: 100%;\n    margin: 0;\n    font-family: \"Inter UI\", sans-serif;\n  }\n  \n  #root {\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n","import axios from \"axios\";\nimport pick from \"lodash/pick\";\n\nimport {\n  TUserDocument,\n  TUserModel\n} from \"../../../../server/models/User/types\";\nimport { TUser } from \"../../../types\";\n\nexport const fetchUsers = () => {\n  if (__CLIENT__) {\n    return axios.get(\"/api/\").then(res => res.data);\n  } else if (__SERVER__) {\n    const User = require(\"../../../../server/models/User\")\n      .default as TUserModel;\n\n    return User.find({}, User.publicFields)\n      .lean()\n      .then((users: TUser[]) => {\n        return users.map(user => {\n          user._id = user._id.toString();\n          return user;\n        });\n      });\n  }\n};\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { fetchUsers as fetchUsersApi } from \"./apiService\";\nimport { UsersFetchActionTypes } from \"./types\";\n\nexport function* fetchUsers() {\n  try {\n    const users = yield call(fetchUsersApi);\n    yield put({ type: UsersFetchActionTypes.USERS_FETCH_SUCCEEDED, users });\n  } catch (error) {\n    yield put({ type: UsersFetchActionTypes.USERS_FETCH_FAILED, error });\n  }\n}\n\nexport default function* userListSaga() {\n  yield takeLatest(UsersFetchActionTypes.USERS_FETCH_REQUESTED, fetchUsers);\n}\n","import axios from \"axios\";\n\nimport { TUser } from \"../../../types\";\nimport { TUserModel } from \"../../../../server/models/User/types\";\n\nexport const fetchSingleUser = (id: string) => {\n  if (__CLIENT__) {\n    return axios.get<TUser>(`/api/${id}`).then(res => {\n      return res.data;\n    });\n  } else if (__SERVER__) {\n    const User = require(\"../../../../server/models/User\")\n      .default as TUserModel;\n\n    return User.findById(id, User.publicFields)\n      .lean()\n      .then((user: TUser) => {\n        user._id = user._id.toString();\n        return user;\n      });\n  }\n};\n\nexport const removeUser = (id: string) => {\n  return axios.delete(`/api/delete/${id}`);\n};\n","import { takeLatest, call, put, all } from \"redux-saga/effects\";\n\nimport { fetchSingleUser, removeUser } from \"./apiService\";\nimport {\n  fetchSingleUserSucceeded,\n  fetchSingleUserFailed\n} from \"./actionCreators\";\n\nimport {\n  fetchSingleUserTypes,\n  removeUserTypes,\n  TFetchSingleUserActions,\n  TRemoveUserAction\n} from \"./types\";\n\nexport function* fetchSingleUserWorker(action: TFetchSingleUserActions) {\n  if (action.type === fetchSingleUserTypes.FETCH_SINGLE_USER_REQUESTED) {\n    try {\n      const user = yield call(fetchSingleUser, action.id);\n      yield put(fetchSingleUserSucceeded(user));\n    } catch (error) {\n      yield put(fetchSingleUserFailed(error));\n    }\n  }\n}\n\nexport function* removeUserWorker(action: TRemoveUserAction) {\n  try {\n    yield call(removeUser, action.id);\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport default function* watchFetchSingleUser() {\n  yield all([\n    takeLatest(\n      fetchSingleUserTypes.FETCH_SINGLE_USER_REQUESTED,\n      fetchSingleUserWorker\n    ),\n    takeLatest(removeUserTypes.REMOVE_USER, removeUserWorker)\n  ]);\n}\n","import { TFetchUserApiService } from \"./types\";\nimport { TUser } from \"../../../types\";\nimport { TUserModel } from \"../../../../server/models/User/types\";\n\nconst fetchUserService: TFetchUserApiService = id => {\n  if (__SERVER__) {\n    const User = require(\"../../../../server/models/User\")\n      .default as TUserModel;\n\n    return User.findById(id, User.publicFields)\n      .lean()\n      .then((user: TUser) => {\n        user._id = user._id.toString();\n        return user;\n      });\n  }\n};\n\nexport default fetchUserService;\n","import { takeLatest, call, put } from \"redux-saga/effects\";\n\nimport fetchUserApiService from \"./apiService\";\nimport { userFetchSucceeded, userFetchFailed } from \"./actionCreators\";\n\nimport { userFetchTypes, TUserFetchRequestedAction } from \"./types\";\n\nexport function* fetchUserWorker({ id }: TUserFetchRequestedAction) {\n  try {\n    const user = yield call(fetchUserApiService, id);\n    yield put(userFetchSucceeded(user));\n  } catch (error) {\n    yield put(userFetchFailed(error));\n  }\n}\n\nexport default function* fetchUserWatcher() {\n  yield takeLatest(userFetchTypes.USER_FETCH_REQUESTED, fetchUserWorker);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport userListSaga from \"./Root/screens/UserList/sagas\";\nimport singleUserSaga from \"./Root/screens/SingleUser/sagas\";\nimport editProfileSaga from \"./Root/screens/EditProfile/sagas\";\n\nexport default function* rootSaga() {\n  yield all([fork(userListSaga), fork(singleUserSaga), fork(editProfileSaga)]);\n}\n","import React from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport { StaticRouter } from \"react-router\";\nimport { Application, Handler, RequestHandler } from \"express\";\nimport config from \"config\";\nimport { Provider } from \"react-redux\";\nimport { ServerStyleSheet } from \"styled-components\";\nimport passport from \"passport\";\n\nimport Root from \"../../../common/Root\";\nimport configureStore, { defaultState } from \"../../../common/configureStore\";\nimport \"../../../common/globalStyles\";\nimport rootSaga from \"../../../common/rootSaga\";\n\nimport { TStaticContext } from \"./types\";\nimport { TUser } from \"../../../common/types\";\n\nconst assets: string[] = JSON.parse(CLIENT_ASSETS).filter((asset: string) =>\n  /.js$/.test(asset)\n);\n\nconst authHandler: Handler = (req, res, next) => {\n  passport.authenticate(\"jwt\", { session: false }, (err, user, info) => {\n    if (err) return next(err);\n    if (user) {\n      req.user = user;\n    }\n    next();\n  })(req, res, next);\n};\n\nconst SSRHandler: Handler = (req, res, next) => {\n  const context: TStaticContext = {};\n  const modules: string[] = [];\n  const sheet = new ServerStyleSheet();\n  const localDefaultState = { ...defaultState };\n\n  if (req.user) {\n    const { user } = req;\n    user._id = user._id.toString();\n    localDefaultState.loggedInUser = user as TUser;\n  }\n\n  const store = configureStore(localDefaultState);\n\n  const rootComp = (\n    <Provider store={store}>\n      <StaticRouter location={req.originalUrl} context={context}>\n        <Root />\n      </StaticRouter>\n    </Provider>\n  );\n\n  if (context.url) {\n    res.redirect(context.status || 301, context.url);\n  } else {\n    store.runSaga(rootSaga).done.then(() => {\n      const html = `\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        \n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n          <title>User accounts</title>\n          ${sheet.getStyleTags()}\n          <script>window.__INITIAL_STATE__ = ${JSON.stringify(\n            store.getState()\n          )}</script>\n        </head>\n        \n        <body>\n          <div id=\"root\">${renderToString(rootComp)}</div>\n        \n          ${assets\n            .slice()\n            .reverse()\n            .map(assetPath => {\n              return `<script src=\"${assetPath}\"></script>`;\n            })\n            .join(\"\\n\")}\n        </body>\n        </html>\n      `;\n      res.send(html);\n    });\n    renderToString(rootComp);\n    store.close();\n  }\n};\n\nexport default [authHandler, SSRHandler];\n","import path from \"path\";\nimport mongoose from \"mongoose\";\nimport cookieParser from \"cookie-parser\";\nimport serveFavicon from \"serve-favicon\";\nimport config from \"config\";\nimport express, { ErrorRequestHandler } from \"express\";\n\nimport configureLibs from \"./libConfig\";\nimport { usersApi, ssr } from \"./routes\";\n\nconst app = express();\n\napp.disable(\"x-powered-by\");\n\nif (process.env.NODE_ENV === \"production\") {\n  app.use(\"/assets/\", express.static(\"public\"));\n}\n\napp.use(serveFavicon(path.resolve(\"./public/favicon.ico\")));\napp.use(\"/assets\", express.static(\"public\"));\napp.use(cookieParser(config.get(\"cookies.secret\")));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\nconfigureLibs(app);\n\napp.use(\"/api/\", usersApi);\napp.use(\"/*\", ssr);\n\nconst errorHandler: ErrorRequestHandler = (err, req, res, next) => {\n  res.status(err.statusCode || 500).send(err.message);\n};\napp.use(errorHandler);\n\nexport default app;\n","import passport from \"passport\";\nimport {\n  Strategy as JWTStrategy,\n  ExtractJwt,\n  StrategyOptions\n} from \"passport-jwt\";\nimport { Application } from \"express\";\nimport config from \"config\";\nimport pick from \"lodash/pick\";\n\nimport User from \"../models/User\";\n\nexport default (app: Application) => {\n  app.use(passport.initialize());\n\n  const options: StrategyOptions = {\n    jwtFromRequest(req) {\n      let token = null;\n      if (req && req.signedCookies) {\n        token = req.signedCookies[\"access_token\"];\n      }\n      return token;\n    },\n    secretOrKey: config.get(\"jwt.secret\")\n  };\n\n  passport.use(\n    new JWTStrategy(options, (payload, done) => {\n      User.findById(payload.id, (err, user) => {\n        if (err) return done(err);\n        if (!user) return done(null, false);\n        return done(null, pick(user, User.publicFields));\n      });\n    })\n  );\n};\n","import \"./mongoose\";\nimport configurePassport from \"./passport\";\nimport { Application } from \"express\";\n\nexport default (app: Application) => {\n  configurePassport(app);\n};\n","import config from \"config\";\nimport app from \"./server\";\n\napp.listen(config.get(\"serverPort\"));\n","module.exports = function(originalModule) {\r\n\tif (!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n"],"sourceRoot":""}